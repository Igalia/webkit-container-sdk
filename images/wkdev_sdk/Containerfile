FROM ubuntu:23.04

LABEL maintainer="webkit-gtk@lists.webkit.org"
LABEL version="1.0"
LABEL description="Provides a complete WebKit Gtk/WPE development environment based on Ubuntu 23.04"

# Tweakable "make -j <x>" setting.
ARG NUMBER_OF_PARALLEL_BUILDS=4
ARG CONTAINER_LOCALE=en_US.UTF-8

# No need to modify these.
ARG APT_UPDATE="apt-get update"
ARG APT_BUILDDEP="apt-get --assume-yes build-dep"
ARG APT_UPGRADE="apt-get --assume-yes upgrade"
ARG APT_INSTALL="apt-get --assume-yes install --no-install-recommends"
ARG APT_AUTOREMOVE="apt-get --assume-yes autoremove"

# Disable prompt during package configuration
ENV DEBIAN_FRONTEND noninteractive

# Debian package build settings
ENV DEBEMAIL "webkit-gtk@lists.webkit.org"
ENV DEBFULLNAME "Igalia"

# Enable debugging in WebKit's sandbox.
ENV WEBKIT_ENABLE_DEBUG_PERMISSIONS_IN_SANDBOX "1"

# Used in webkitdirs.pm to prefer building against system libraries instead of the Flatpak SDK.
ENV WEBKIT_BUILD_USE_SYSTEM_LIBRARIES "1"

# Delete the default ubuntu user which has a UID of 1000.
# Podman refuses to map a user from the host if the UID is already in /etc/passwd.
RUN userdel ubuntu

# NOTE: All RUN commands contain the (autoremove / clean / rm step to ensure that no intermediate layer
#       ever contains unncessary stuff that never appears in the final image, only in deeper layers, and
#       thus increases the whole image size no gain, except an "easier to read" Dockerfile.

# Disable sandboxing (dropping privileges to _apt user during apt-get update/install/... fails when using
# podman in podman if both are rootless; since it's no gain in security in the container anyhow, disable it.
RUN echo 'APT::Sandbox::User "root";' > /etc/apt/apt.conf.d/no-sandbox

# Update package list, upgrade to latest version, install necessary packages for
# early bootstrapping: .deb package configuration + locale generation.
RUN --mount=type=cache,target=/var/cache/apt --mount=type=cache,target=/var/lib/apt/lists/ \
    ${APT_UPDATE} && \
    ${APT_INSTALL} apt-utils dialog libterm-readline-gnu-perl locales && \
    ${APT_UPGRADE} && ${APT_AUTOREMOVE}

# Disable exclusion of locales / translations / documentation (default in Ubuntu images)
RUN yes | /usr/local/sbin/unminimize

# Switch to fixed locale.
RUN locale-gen ${CONTAINER_LOCALE}
ENV LC_ALL ${CONTAINER_LOCALE}
ENV LANG ${CONTAINER_LOCALE}
RUN dpkg-reconfigure locales

# Install all dependencies for WebKit/GStreamer/etc in one pass.
WORKDIR /var/tmp/wkdev-packages
COPY /required_system_packages/*.lst .
RUN --mount=type=cache,target=/var/cache/apt --mount=type=cache,target=/var/lib/apt/lists/ \
    sed -i '/deb-src/s/^# //' /etc/apt/sources.list && \
    ${APT_UPDATE} && \
    for list in *.lst; do \
        ${APT_INSTALL} $(sed -e "s/.*#.*//; /^$/d" "${list}"); \
    done; \
    ${APT_BUILDDEP} gst-libav1.0 gst-plugins-bad1.0 gst-plugins-base1.0 \
	                gst-plugins-good1.0 gst-plugins-ugly1.0 && \
    git clone --filter=blob:none --no-checkout --depth=1 https://github.com/WebKit/WebKit.git && \
    cd WebKit && \
    git sparse-checkout set Tools/ && \
    git checkout main && \
    yes | ./Tools/gtk/install-dependencies && \
    yes | ./Tools/wpe/install-dependencies && \
    cd .. && \
    rm -rf WebKit && \
    ${APT_AUTOREMOVE}

# Copy jhbuild helper files and do the initial build & install
COPY /jhbuild/jhbuildrc /etc/xdg/jhbuildrc
COPY /jhbuild/webkit-sdk-deps.modules /jhbuild/webkit-sdk-deps.modules
WORKDIR /jhbuild
RUN --mount=type=cache,target=/var/tmp/jhbuild --mount=type=cache,target=/root/.cache/ \
    git clone https://gitlab.gnome.org/GNOME/jhbuild.git && \
    cd jhbuild && \
    ./autogen.sh --prefix=/usr/local && \
    make && \
    make install && \
    export JHBUILD_RUN_AS_ROOT=1 WKDEV_IN_IMAGE_BUILD=1 && \
    jhbuild --no-interact build

# Register basic JHBuild environment
# TODO: Instead of hardcoding here the values it would be better to
# explore the possibility of generating it dinamically with "jhbuild shell"
# when the user enters into the container (or similar), but that may cause
# issues with the env not exported when someone enter into the
# container via direct command exec rather than by login
ENV LD_LIBRARY_PATH "/jhbuild/install/lib"
ENV GST_PLUGIN_PATH_1_0 "/jhbuild/install/lib/gstreamer-1.0"
ENV PKG_CONFIG_PATH "/jhbuild/install/lib/pkgconfig:/jhbuild/install/share/pkgconfig:/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/lib/pkgconfig:/usr/share/pkgconfig"
ENV LDFLAGS "-L/jhbuild/install/lib"
ENV C_INCLUDE_PATH "/jhbuild/install/include"
ENV CPLUS_INCLUDE_PATH "/jhbuild/install/include"
ENV PATH "/jhbuild/install/bin:$PATH"

# Podman proxy, connecting to host instance
COPY /rootfs/usr/bin/podman-host /usr/bin/podman-host

# Switch back to interactive prompt, when using apt.
ENV DEBIAN_FRONTEND dialog

