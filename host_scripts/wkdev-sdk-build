#!/usr/bin/bash

application_path=${0}
application_name=$(basename ${application_path})
application_directory=$(cd "$(dirname "${application_path:-$PWD}")" 2>/dev/null 1>&2 && pwd)
sdk_directory=$(readlink -f "${application_directory}/../")
printf "${application_name}: Build wkdev-sdk image.\n"

verbose=1

# Prevent to run this script from the container
if [ -f /run/.containerenv ]; then
    printf "\nThe script '${application_name}' is not intended to run from within the container.\n"
    exit 1
fi

# Verify pre-requisite: podman needs to be installed.
if ! command -v podman > /dev/null; then
    printf "\nCannot find podman executable.\n"
    exit 1
fi

# Bash scripting recommendations
set -o errexit # Exit upon command failure
set -o nounset # Warn about unset variables

# Helper functions
build_auxiliary_image() {
    local image_flavour=${1}

    printf "\n-> Building '${image_flavour}' auxiliary image...\n"
    if [ ${verbose} -eq 1 ]; then
        printf "   Build log:\n"
        ${sdk_directory}/auxiliary/${image_flavour}/build-image.sh
    else
        ${sdk_directory}/auxiliary/${image_flavour}/build-image.sh &>/dev/null
    fi
}

build_packages_defined_in_yaml() {
    local packages_flavour="${1}"
    if [ ! -f "${sdk_directory}/.build-done_${packages_flavour}" ]; then
        printf "\n-> Building packages denoted in '${packages_flavour}.yaml' configuration for inclusion in 'wkdev-sdk' image...\n"

        temporary_directory=$(mktemp -d)
        pushd "${temporary_directory}" &>/dev/null

        ${sdk_directory}/container_scripts/wkdev-setup-dependency-work-tree --settings "${sdk_directory}/dependencies/${packages_flavour}.yaml" --workdir "${PWD}"
        cd builds && make && cp --archive --verbose --dereference ${temporary_directory}/packages/*.*eb "${sdk_directory}/packages/binaries/${packages_flavour}/"

        touch "${sdk_directory}/.build-done_${packages_flavour}"
        popd &>/dev/null
    fi
}

# 1) Build ubuntu_package_proxy auxiliary image
build_auxiliary_image "ubuntu_package_proxy"

# 2) Build ubuntu_package_builder auxiliary image
build_auxiliary_image "ubuntu_package_builder"

# 3) Build podman4 & friends for Ubuntu 22.10
build_packages_defined_in_yaml "wkdev-podman4-ubuntu-kinetic"

# 4) Build WebKit dependencies (libjpegxl, gstreamer, ...)
build_packages_defined_in_yaml "wkdev-webkit-dependencies"

# 5) Build wkdev-sdk image
pushd "${sdk_directory}" &>/dev/null
printf "\n-> Building 'wkdev-sdk' image...\n"

if [ ${verbose} -eq 1 ]; then
    printf "   Build log:\n"
    podman build --jobs $(nproc --ignore=2) --tag docker.io/nikolaszimmermann/wkdev-sdk:latest ${@} .
else
    podman build --jobs $(nproc --ignore=2) --tag docker.io/nikolaszimmermann/wkdev-sdk:latest ${@} . &>/dev/null
fi

popd &>/dev/null
printf "\n-> Finished building images!\n"
