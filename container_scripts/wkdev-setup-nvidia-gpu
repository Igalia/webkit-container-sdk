#!/bin/sh

# TODO: Not functional yet.

application_path=${0}
application_name=$(basename ${application_path})
printf "${application_name}: Setup access to NVIDIA GPU in container.\n"
printf "Timestamp: $(date)\n"

# Prevent to run this script from the host
if [ ! -f /run/.containerenv ]; then
    printf "\nThe script '${application_name}' is intended to run from within the container only.\n"
    exit 1
fi

# 1) Install nvidia-smi & friends
printf "\n-> Install 'nvidia-utils' package...\n"
sudo apt-get update && sudo apt-get install --assume-yes nvidia-utils-525

# 2) NVIDIA container tools setup
printf "\n-> Install 'nvidia-container-tools' package...\n"
ubuntu_distribution=ubuntu22.04
curl --silent --location https://nvidia.github.io/libnvidia-container/gpgkey | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/nvidia-container-toolkit.gpg
curl --silent --location https://nvidia.github.io/libnvidia-container/${ubuntu_distribution}/libnvidia-container.list | sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list

sudo apt-get update && sudo apt install --assume-yes nvidia-container-toolkit
sudo sed --in-place 's/^#no-cgroups = false/no-cgroups = true/;' /etc/nvidia-container-runtime/config.toml

# 3) Install same shell that current host user uses.
printf "\n-> Creating NVIDIA OCI container hook....\n"
sudo tee /etc/containers/oci/hooks.d/oci-nvidia-hook.json <<EOF
{
    "version": "1.0.0",
    "hook": {
        "path": "/usr/bin/nvidia-container-toolkit",
        "args": ["nvidia-container-toolkit", "prestart"],
        "env": [
            "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
        ]
    },
    "when": {
        "always": true,
        "commands": [".*"]
    },
    "stages": ["prestart"]
}
EOF

# 4) Rest forever
printf "\n-> Finished setup! Please re-enter container.\n"
printf "   Timestamp: $(date)\n"
