name: wkdev-sdk
on:
  push:
    branches: [ main, tag/** ]
    paths-ignore: [ docs/*, README.md]
  pull_request:
    paths-ignore: [ docs/*, README.md]
  create:
defaults:
  run:
    shell: bash
jobs:
  build_amd64:
    runs-on: [self-hosted, x64]
    if: |
      github.event_name != 'create' ||
      startsWith(github.ref_name, 'tag/')
    steps:
      - name: Set tag name
        run: |
          if [ "${GITHUB_BASE_REF}" = 'main' ]; then
            echo "WKDEV_SDK_TAG=latest" >> "${GITHUB_ENV}"
          fi
          echo "WKDEV_SDK_CONTAINER_REGISTRY_USER_NAME=$(echo ${GITHUB_REPOSITORY_OWNER} | tr '[:upper:]' '[:lower:]')" >> "${GITHUB_ENV}"
          echo "REPO=ghcr.io/$(echo ${GITHUB_REPOSITORY_OWNER} | tr '[:upper:]' '[:lower:]')/wkdev-sdk" >> "${GITHUB_ENV}"

      - name: Install podman
        run: sudo apt-get update && sudo apt-get -y install podman fuse-overlayfs

      - name: Prune old containers/images
        run: |
          echo "Disk space before prune:"
          df -h
          echo "Pruning containers and images older than 2 weeks..."
          podman system prune --all --force --volumes --filter until=336h || true
          echo "Disk space after prune:"
          df -h

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Clean unrelated images
        run: |
          podman rmi --ignore --force ${REPO}:latest
          podman manifest rm ${REPO}:latest || true
          podman rmi --ignore --force ${REPO}:latest_amd64

      - name: Build image
        run: |
          source ./register-sdk-on-host.sh
          wkdev-sdk-bakery --mode=build --verbose --arch amd64
          podman image list
          wkdev-sdk-bakery --mode=export --verbose --arch amd64

      - name: Archive image
        uses: actions/upload-artifact@v4
        with:
          name: wkdev-sdk-amd64.tar
          path: wkdev-sdk-amd64.tar
          retention-days: 7

      - name: Test image
        run: |
          CONTAINER="wkdev-$(date +%s)"
          echo "CONTAINER=${CONTAINER}" >> "${GITHUB_ENV}"
          source ./register-sdk-on-host.sh
          wkdev-create --create-home --home ${HOME}/${CONTAINER}-home --verbose --attach --no-pull --name ${CONTAINER} --arch amd64
          wkdev-enter -n ${CONTAINER} --exec -- git clone --depth=1 https://github.com/WebKit/WebKit.git
          wkdev-enter -n ${CONTAINER} --exec -- ./WebKit/Tools/Scripts/build-webkit --wpe --release --generate-project-only
          wkdev-enter -n ${CONTAINER} --exec -- ./WebKit/Tools/Scripts/build-webkit --gtk --release --generate-project-only

      - name: Cleanup test artifacts
        if: always()
        run: |
          # Remove the specific container created by this test run
          if [ -n "${CONTAINER:-}" ]; then
            podman rm --force ${CONTAINER} 2>/dev/null || true
            rm -rf ${HOME}/${CONTAINER}-home || true
          fi
          # Clean up any leftover containers and home directories from previous failed runs
          podman ps -a --filter "name=^wkdev-" --format "{{.Names}}" | xargs -r podman rm --force 2>/dev/null || true
          find ${HOME} -maxdepth 1 -type d -name "wkdev-*-home" -exec rm -rf {} + 2>/dev/null || true

  build_arm64:
    runs-on: [self-hosted, arch-arm64]
    if: |
      github.event_name != 'create' ||
      startsWith(github.ref_name, 'tag/')
    steps:
      - name: Set tag name
        run: |
          if [ "${GITHUB_BASE_REF}" = 'main' ]; then
            echo "WKDEV_SDK_TAG=latest" >> "${GITHUB_ENV}"
          fi
          echo "WKDEV_SDK_CONTAINER_REGISTRY_USER_NAME=$(echo ${GITHUB_REPOSITORY_OWNER} | tr '[:upper:]' '[:lower:]')" >> "${GITHUB_ENV}"
          echo "REPO=ghcr.io/$(echo ${GITHUB_REPOSITORY_OWNER} | tr '[:upper:]' '[:lower:]')/wkdev-sdk" >> "${GITHUB_ENV}"

      - name: Install podman
        run: sudo apt-get update && sudo apt-get -y install podman fuse-overlayfs

      - name: Prune old containers/images
        run: |
          echo "Disk space before prune:"
          df -h
          echo "Pruning containers and images older than 2 weeks..."
          podman system prune --all --force --volumes --filter until=336h || true
          echo "Disk space after prune:"
          df -h

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Clean unrelated images
        run: |
          podman rmi --ignore --force ${REPO}:latest
          podman manifest rm ${REPO}:latest || true
          podman rmi --ignore --force ${REPO}:latest_amd64

      - name: Build image
        run: |
          source ./register-sdk-on-host.sh
          wkdev-sdk-bakery --mode=build --verbose --arch arm64
          podman image list
          wkdev-sdk-bakery --mode=export --verbose --arch arm64

      - name: Archive image
        uses: actions/upload-artifact@v4
        with:
          name: wkdev-sdk-arm64.tar
          path: wkdev-sdk-arm64.tar
          retention-days: 7

      - name: Test image
        run: |
          CONTAINER="wkdev-$(date +%s)"
          echo "CONTAINER=${CONTAINER}" >> "${GITHUB_ENV}"
          source ./register-sdk-on-host.sh
          wkdev-create --create-home --home ${HOME}/${CONTAINER}-home --verbose --attach --no-pull --name ${CONTAINER} --arch arm64 --shell /bin/bash
          wkdev-enter -n ${CONTAINER} --exec -- git clone --depth=1 https://github.com/WebKit/WebKit.git
          wkdev-enter -n ${CONTAINER} --exec -- ./WebKit/Tools/Scripts/build-webkit --wpe --release --generate-project-only
          wkdev-enter -n ${CONTAINER} --exec -- ./WebKit/Tools/Scripts/build-webkit --gtk --release --generate-project-only

      - name: Cleanup test artifacts
        if: always()
        run: |
          # Remove the specific container created by this test run
          if [ -n "${CONTAINER:-}" ]; then
            podman rm --force ${CONTAINER} 2>/dev/null || true
            rm -rf ${HOME}/${CONTAINER}-home || true
          fi
          # Clean up any leftover containers and home directories from previous failed runs
          podman ps -a --filter "name=^wkdev-" --format "{{.Names}}" | xargs -r podman rm --force 2>/dev/null || true
          find ${HOME} -maxdepth 1 -type d -name "wkdev-*-home" -exec rm -rf {} + 2>/dev/null || true

  build_armv7:
    runs-on: [self-hosted, arch-armv7]
    if: |
      github.event_name != 'create' ||
      startsWith(github.ref_name, 'tag/')
    steps:
      - name: Set tag name
        run: |
          if [ "${GITHUB_BASE_REF}" = 'main' ]; then
            echo "WKDEV_SDK_TAG=latest" >> "${GITHUB_ENV}"
          fi
          echo "WKDEV_SDK_CONTAINER_REGISTRY_USER_NAME=$(echo ${GITHUB_REPOSITORY_OWNER} | tr '[:upper:]' '[:lower:]')" >> "${GITHUB_ENV}"
          echo "REPO=ghcr.io/$(echo ${GITHUB_REPOSITORY_OWNER} | tr '[:upper:]' '[:lower:]')/wkdev-sdk" >> "${GITHUB_ENV}"

      - name: Install podman
        run: sudo apt-get update && sudo apt-get -y install podman fuse-overlayfs

      - name: Prune old containers/images
        run: |
          echo "Disk space before prune:"
          df -h
          echo "Pruning containers and images older than 2 weeks..."
          podman system prune --all --force --volumes --filter until=336h || true
          echo "Disk space after prune:"
          df -h

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Clean unrelated images
        run: |
          podman rmi --ignore --force ${REPO}:latest
          podman manifest rm ${REPO}:latest || true
          podman rmi --ignore --force ${REPO}:latest_amd64

      - name: Build image
        run: |
          source ./register-sdk-on-host.sh
          wkdev-sdk-bakery --mode=build --verbose --arch arm
          podman image list
          wkdev-sdk-bakery --mode=export --verbose --arch arm

      - name: Archive image
        uses: actions/upload-artifact@v4
        with:
          name: wkdev-sdk-arm.tar
          path: wkdev-sdk-arm.tar
          retention-days: 7

      - name: Test image
        run: |
          CONTAINER="wkdev-$(date +%s)"
          echo "CONTAINER=${CONTAINER}" >> "${GITHUB_ENV}"
          source ./register-sdk-on-host.sh
          wkdev-create --create-home --home ${HOME}/${CONTAINER}-home --verbose --attach --no-pull --name ${CONTAINER} --arch arm --shell /bin/bash
          wkdev-enter -n ${CONTAINER} --exec -- git clone --depth=1 https://github.com/WebKit/WebKit.git
          wkdev-enter -n ${CONTAINER} --exec -- ./WebKit/Tools/Scripts/build-webkit --wpe --release --generate-project-only
          wkdev-enter -n ${CONTAINER} --exec -- ./WebKit/Tools/Scripts/build-webkit --gtk --release --generate-project-only

      - name: Cleanup test artifacts
        if: always()
        run: |
          # Remove the specific container created by this test run
          if [ -n "${CONTAINER:-}" ]; then
            podman rm --force ${CONTAINER} 2>/dev/null || true
            rm -rf ${HOME}/${CONTAINER}-home || true
          fi
          # Clean up any leftover containers and home directories from previous failed runs
          podman ps -a --filter "name=^wkdev-" --format "{{.Names}}" | xargs -r podman rm --force 2>/dev/null || true
          find ${HOME} -maxdepth 1 -type d -name "wkdev-*-home" -exec rm -rf {} + 2>/dev/null || true

  deploy:
    runs-on: [self-hosted, x64]
    needs: [build_amd64, build_armv7, build_arm64]
    if: |
      (github.event_name != 'create' || startsWith(github.ref_name, 'tag/')) &&
      (github.ref_name == 'main' || startsWith(github.ref_name, 'tag/'))
    steps:
      - name: Set tag name
        run: |
          if [ "${GITHUB_BASE_REF}" = 'main' ]; then
            echo "WKDEV_SDK_TAG=latest" >> "${GITHUB_ENV}"
          fi
          echo "WKDEV_SDK_CONTAINER_REGISTRY_USER_NAME=$(echo ${GITHUB_REPOSITORY_OWNER} | tr '[:upper:]' '[:lower:]')" >> "${GITHUB_ENV}"
          echo "REPO=ghcr.io/$(echo ${GITHUB_REPOSITORY_OWNER} | tr '[:upper:]' '[:lower:]')/wkdev-sdk" >> "${GITHUB_ENV}"

      - name: Install podman
        run: sudo apt-get update && sudo apt-get -y install podman fuse-overlayfs

      - name: Prune old containers/images
        run: |
          echo "Disk space before prune:"
          df -h
          echo "Pruning containers and images older than 2 weeks..."
          podman system prune --all --force --volumes --filter until=336h || true
          echo "Disk space after prune:"
          df -h

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download images
        uses: actions/download-artifact@v4
        with:
          pattern: wkdev-sdk-*
          merge-multiple: true
      - run: ls -al

      - name: Clean all previous images
        run: |
          podman rmi --ignore --force ${REPO}:latest
          podman manifest rm ${REPO}:latest || true
          podman rmi --ignore --force ${REPO}:latest_arm64
          podman rmi --ignore --force ${REPO}:latest_amd64
          podman rmi --ignore --force ${REPO}:latest_arm

      - name: Deploy image
        run: |
          podman load < ./wkdev-sdk-amd64.tar
          podman load < ./wkdev-sdk-arm64.tar
          podman load < ./wkdev-sdk-arm.tar
          podman image list
          echo "${{ secrets.GITHUB_TOKEN }}" | podman login ghcr.io --username=${GITHUB_REPOSITORY_OWNER} --password-stdin
          source ./register-sdk-on-host.sh
          wkdev-sdk-bakery --mode=deploy --verbose --multiarch
          podman image list
